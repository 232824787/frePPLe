<?xml version="1.0" encoding="UTF-8" ?>
<!--
 file : $URL$
 version : $LastChangedRevision$  $LastChangedBy$
 date : $LastChangedDate$

 Copyright (C) 2007 by Johan De Taeye

 This library is free software; you can redistribute it and/or modify it
 under the terms of the GNU Lesser General Public License as published
 by the Free Software Foundation; either version 2.1 of the License, or
 (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser
 General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA
-->
<xsd:schema xmlns:xsd='http://www.w3.org/2001/XMLSchema'
  elementFormDefault="unqualified" attributeFormDefault="unqualified" version="0.5.0-beta">
	<!--
    This file should not be customized. In case you want to customize the schema
    with your own needs, you should define a new namespace and import the
    frepple namespace into your schema.
    Keep in mind that the application always picks up the schema from the file
    $FREPPLE_HOME/frepple.xsd.
  -->

  <!-- Include the core frepple schema. -->
	<xsd:include schemaLocation="frepple_core.xsd" />

	<!--
	  For each module we want to use the extra schema definitions need to be included.
	  Manually edit this section.
	-->
	<xsd:include schemaLocation="mod_python.xsd" />
	<xsd:include schemaLocation="mod_forecast.xsd" />
        <!-- <xsd:include schemaLocation="mod_webservice.xsd" /> -->
	<!-- <xsd:include schemaLocation="mod_lpsolver.xsd" /> -->

  <!-- Define the root element and its contents. -->
	<xsd:element name="plan">
		<xsd:annotation>
			<xsd:documentation>
        This is the root tag in the data schema.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<!--
        Note: Frepple can read XML data where multiple elements of the same name
        are present (e.g. 2 ITEMS elements), but the Microsoft Office XML tools
        can't deal with this.
        To make the schema more compatible with Bill's world, replace the
        construct below with:
            <xsd:all>
               <xsd:element ... minOccurs="0">
               ...
            </xsd:all>
        Each element can then be present 0 or 1 time.
      -->
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<!-- FIELDS -->
				<xsd:element name="name" type="xsd:normalizedString" />
				<xsd:element name="description" type="xsd:string" />
				<xsd:element name="current" type="xsd:dateTime" />
				<xsd:element name="logfile" type="xsd:normalizedString" />
				<xsd:element name="plannable" type="xsd:boolean" />
				<xsd:element name="detectproblems" type="xsd:boolean" />
				<!-- OBJECT LISTS -->
				<xsd:element name="solvers" type="solverlist" />
				<xsd:element name="commands" type="command_list" />
				<xsd:element name="locations" type="locationlist" />
				<xsd:element name="customers" type="customerlist" />
				<xsd:element name="calendars" type="calendarlist" />
				<xsd:element name="operations" type="operationlist" />
				<xsd:element name="items" type="itemlist" />
				<xsd:element name="buffers" type="bufferlist" />
				<xsd:element name="flows" type="flowlist" />
				<xsd:element name="loads" type="loadlist" />
				<xsd:element name="demands" type="demandlist" />
				<xsd:element name="resources" type="resourcelist" />
				<xsd:element name="operation_plans" type="operationplanlist" />
				<xsd:element name="problems" type="problemlist" />
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>

</xsd:schema>
