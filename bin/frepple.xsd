<?xml version="1.0" encoding="UTF-8" ?>
<!--
 file : $HeadUrl$
 version : $LastChangedRevision$  $LastChangedBy$
 date : $LastChangedDate$
 email : jdetaeye@users.sourceforge.net

 Copyright (C) 2007 by Johan De Taeye

 This library is free software; you can redistribute it and/or modify it
 under the terms of the GNU Lesser General Public License as published
 by the Free Software Foundation; either version 2.1 of the License, or
 (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser
 General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA
-->
<xsd:schema xmlns:xsd='http://www.w3.org/2001/XMLSchema' elementFormDefault="unqualified" attributeFormDefault="unqualified" version="1.0">
	<!--
    This file should not be customized. In case you want to customize the schema
    with your own needs, you should define a new namespace and import the
    frepple namespace into your schema.
    Keep in mind that the application always picks up the schema from the file
    $FREPPLE_HOME/frepple.xsd.
  -->
	<!--
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace">
    <xsd:annotation>
    <xsd:documentation>
    The schemaLocation of the relevant file is
    "http://www.w3.org/2001/xml.xsd"; however,
    we don't want to assume people are always
    connected to the 'net when playing with this file.
    </xsd:documentation>
    </xsd:annotation>
    </xsd:import>
  -->
	<xsd:include schemaLocation="frepple_core.xsd" />
	<xsd:element name="PLAN">
		<xsd:annotation>
			<xsd:documentation>
        This is the root tag in the data schema.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<!--
        Note: Frepple can read XML data where multiple elements of the same name
        are present (e.g. 2 ITEMS elements), but the Microsoft Office XML tools
        can't deal with this.
        To make the schema more compatible with Bill's world, replace the
        construct below with:
            <xsd:all>
               <xsd:element ... minOccurs="0">
               ...
            </xsd:all>
        Each element can then be present 0 or 1 time.
      -->
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<!-- FIELDS -->
				<xsd:element name="NAME" type="xsd:string" />
				<xsd:element name="DESCRIPTION" type="xsd:string" />
				<xsd:element name="CURRENT" type="xsd:dateTime" />
				<xsd:element name="LOGFILE" type="xsd:string" />
				<xsd:element name="DEFAULT_CALENDAR" type="CALENDAR" />
				<xsd:element name="PLANNABLE" type="xsd:boolean" />
				<xsd:element name="DETECTPROBLEMS" type="xsd:boolean" />
				<!-- OBJECT LISTS -->
				<xsd:element name="SOLVERS" type="SOLVERLIST" />
				<xsd:element name="COMMANDS" type="COMMAND_LIST" />
				<xsd:element name="LOCATIONS" type="LOCATIONLIST" />
				<xsd:element name="CUSTOMERS" type="CUSTOMERLIST" />
				<xsd:element name="CALENDARS" type="CALENDARLIST" />
				<xsd:element name="OPERATIONS" type="OPERATIONLIST" />
				<xsd:element name="ITEMS" type="ITEMLIST" />
				<xsd:element name="BUFFERS" type="BUFFERLIST" />
				<xsd:element name="FLOWS" type="FLOWLIST" />
				<xsd:element name="LOADS" type="LOADLIST" />
				<xsd:element name="DEMANDS" type="DEMANDLIST" />
				<xsd:element name="RESOURCES" type="RESOURCELIST" />
				<xsd:element name="OPERATION_PLANS" type="OPERATIONPLANLIST" />
				<xsd:element name="PROBLEMS" type="PROBLEMLIST" />
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>
