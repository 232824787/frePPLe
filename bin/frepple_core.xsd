<?xml version="1.0" encoding="UTF-8" ?>
<!--
 file : $URL$
 version : $LastChangedRevision$  $LastChangedBy$
 date : $LastChangedDate$

 Copyright (C) 2007 by Johan De Taeye

 This library is free software; you can redistribute it and/or modify it
 under the terms of the GNU Lesser General Public License as published
 by the Free Software Foundation; either version 2.1 of the License, or
 (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser
 General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="unqualified" attributeFormDefault="unqualified" version="1.0">
	<!--
    This schema has no target namespace defined. It will adopt the namespace
    of the schema that is using it with an "include" statement.
    Because of this lack of a proper namespace, this schema file should be used
    only internally by the frepple schema. All external usage of the frepple
    schema should use the schema file frepple.xsd.
  -->
	<!--
    Frepple also recognizes the following XML processing instructions.
    Note that these instructions are never validated or checked by the parser.
    They are only processed inside frepple.

      <?PYTHON xxxx ?>
      Include Python code in your model.
  -->
	<!--
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace">
    <xsd:annotation>
    <xsd:documentation>
    The schemaLocation of the relevant file is
    "http://www.w3.org/2001/xml.xsd"; however,
    we don't want to assume people are always
    connected to the net when playing with this file.
    </xsd:documentation>
    </xsd:annotation>
    </xsd:import>
  -->
	<!-- ACTION -->
	<xsd:simpleType name="action">
		<xsd:annotation>
			<xsd:documentation>
        The input uses an attribute of this type to identify what action to
        perform on the specified entity: A: Add an new entity, and report an
        error if the entity already exists C: Change an existing entity, and
        report an error if the entity doesn't exist yet. AC: Change an entity or
        create a new one if it doesn't exist yet. This is the default. D: Delete
        an entity, and report an error if the entity doesn't exist.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="A" />
			<xsd:enumeration value="C" />
			<xsd:enumeration value="AC" />
			<xsd:enumeration value="R" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="positiveFloat">
		<xsd:restriction base="xsd:float">
			<xsd:minInclusive value="0" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="non-empty-string">
  	<xsd:restriction base="xsd:normalizedString">
    	<xsd:minLength value="1"/>
  	</xsd:restriction>
	</xsd:simpleType>

	<xsd:group name="COMMON_FIELDS">
		<xsd:choice>
			<xsd:element name="CATEGORY" type="xsd:normalizedString" />
			<xsd:element name="SUBCATEGORY" type="xsd:normalizedString" />
			<xsd:element name="DESCRIPTION" type="xsd:string" />
		</xsd:choice>
	</xsd:group>

	<xsd:attributeGroup name="COMMON_ATTRIBUTES">
		<xsd:attribute name="NAME" type="non-empty-string" use="required" />
		<xsd:attribute name="CATEGORY" type="xsd:normalizedString" />
		<xsd:attribute name="SUBCATEGORY" type="xsd:normalizedString" />
		<xsd:attribute name="DESCRIPTION" type="xsd:string" />
		<xsd:attribute name="ACTION" type="action" />
	</xsd:attributeGroup>

	<!-- LOCATION -->
	<xsd:complexType name="LOCATION">
		<xsd:annotation>
			<xsd:documentation>
        Buffers and resources are linked to a (physical or logical) location.
        Locations are merely used for simple association, and have no active use
        in the model.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:group ref="COMMON_FIELDS" />
			<xsd:element name="OWNER" type="LOCATION" />
			<xsd:element name="MEMBERS">
				<xsd:complexType>
					<xsd:sequence minOccurs="0" maxOccurs="unbounded">
						<xsd:element name="LOCATION" type="LOCATION" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
		<xsd:attributeGroup ref="COMMON_ATTRIBUTES" />
	</xsd:complexType>

	<xsd:complexType name="LOCATIONLIST">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="LOCATION" type="LOCATION" />
		</xsd:choice>
	</xsd:complexType>

	<!-- CUSTOMER -->
	<xsd:complexType name="CUSTOMER">
		<xsd:annotation>
			<xsd:documentation>
        Demand is linked to a customer. This association currently has no active
        use in the model.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:group ref="COMMON_FIELDS" />
			<xsd:element name="OWNER" type="CUSTOMER" minOccurs="0" />
			<xsd:element name="MEMBERS" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence minOccurs="0" maxOccurs="unbounded">
						<xsd:element name="CUSTOMER" type="CUSTOMER" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
		<xsd:attributeGroup ref="COMMON_ATTRIBUTES" />
	</xsd:complexType>

	<xsd:complexType name="CUSTOMERLIST">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="CUSTOMER" type="CUSTOMER" />
		</xsd:choice>
	</xsd:complexType>

	<!-- OPERATION -->
	<xsd:complexType name="OPERATION">
		<xsd:annotation>
			<xsd:documentation>
        An operation defines an activity that can consume and produce material
        from buffers, load capacity on resources.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:group ref="COMMON_FIELDS" />
			<xsd:element name="OWNER" type="OPERATION" />
			<xsd:element name="DETECTPROBLEMS" type="xsd:boolean" />
			<xsd:element name="PRETIME" type="xsd:duration" />
			<xsd:element name="POSTTIME" type="xsd:duration" />
			<xsd:element name="FENCE" type="xsd:duration" />
			<xsd:element name="SIZE_MINIMUM" type="positiveFloat" />
			<xsd:element name="SIZE_MULTIPLE" type="positiveFloat" />
			<xsd:element name="LOADS" type="LOADLIST" />
			<xsd:element name="FLOWS" type="FLOWLIST" />
			<xsd:element name="OPERATION_PLANS" type="OPERATIONPLANLIST" />
		</xsd:choice>
		<xsd:attributeGroup ref="COMMON_ATTRIBUTES" />
		<xsd:attribute name="DETECTPROBLEMS" type="xsd:boolean" />
		<xsd:attribute name="PRETIME" type="xsd:duration" />
		<xsd:attribute name="POSTTIME" type="xsd:duration" />
		<xsd:attribute name="FENCE" type="xsd:duration" />
		<xsd:attribute name="SIZE_MINIMUM" type="positiveFloat" />
		<xsd:attribute name="SIZE_MULTIPLE" type="positiveFloat" />
	</xsd:complexType>

	<xsd:complexType name="OPERATIONLIST">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="OPERATION" type="OPERATION" />
			<xsd:element name="OPERATION_FIXED_TIME" type="OPERATION_FIXED_TIME" />
			<xsd:element name="OPERATION_TIME_PER" type="OPERATION_TIME_PER" />
			<xsd:element name="OPERATION_ROUTING" type="OPERATION_ROUTING" />
			<xsd:element name="OPERATION_ALTERNATE" type="OPERATION_ALTERNATE" />
			<xsd:element name="OPERATION_EFFECTIVE" type="OPERATION_EFFECTIVE" />
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="OPERATION_FIXED_TIME">
		<xsd:complexContent>
			<xsd:extension base="OPERATION">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="DURATION" type="xsd:duration" />
				</xsd:choice>
				<xsd:attribute name="DURATION" type="xsd:duration" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="OPERATION_TIME_PER">
		<xsd:complexContent>
			<xsd:extension base="OPERATION">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="DURATION_PER" type="xsd:duration" />
					<xsd:element name="DURATION" type="xsd:duration" />
				</xsd:choice>
				<xsd:attribute name="DURATION_PER" type="xsd:duration" />
				<xsd:attribute name="DURATION" type="xsd:duration" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="OPERATION_ROUTING">
		<xsd:complexContent>
			<xsd:extension base="OPERATION">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="STEPS">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="OPERATION" type="OPERATION" maxOccurs="unbounded" />
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="OPERATION_ALTERNATE">
		<xsd:complexContent>
			<xsd:extension base="OPERATION">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="ALTERNATES">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="ALTERNATE" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="OPERATION" type="OPERATION" />
											<xsd:element name="PRIORITY" type="xsd:float" minOccurs="0" />
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="OPERATION_EFFECTIVE">
		<xsd:complexContent>
			<xsd:extension base="OPERATION">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="CALENDAR" type="CALENDAR" />
					<xsd:element name="STARTOREND" type="xsd:boolean" />
				</xsd:choice>
				<xsd:attribute name="STARTOREND" type="xsd:boolean" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- ITEM -->
	<xsd:complexType name="ITEM">
		<xsd:annotation>
			<xsd:documentation>
        An item defines the products being planned, sold, stored and/or
        manufactured. Buffers and demands have a reference to an item.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:group ref="COMMON_FIELDS" />
			<xsd:element name="OWNER" type="ITEM" />
			<xsd:element name="MEMBERS">
				<xsd:complexType>
					<xsd:sequence minOccurs="0" maxOccurs="unbounded">
						<xsd:element name="ITEM" type="ITEM" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="OPERATION" type="OPERATION" />
		</xsd:choice>
		<xsd:attributeGroup ref="COMMON_ATTRIBUTES" />
	</xsd:complexType>

	<xsd:complexType name="ITEMLIST">
		<xsd:sequence minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="ITEM" type="ITEM" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- RESOURCE -->
	<xsd:complexType name="RESOURCE">
		<xsd:annotation>
			<xsd:documentation>
        A resource represents a workcentre, a physical or logical
        representation of capacity.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:group ref="COMMON_FIELDS" />
			<xsd:element name="LOCATION" type="LOCATION" />
			<xsd:element name="MAXIMUM" type="CALENDAR_FLOAT" />
			<xsd:element name="OWNER" type="RESOURCE" />
			<xsd:element name="MEMBERS">
				<xsd:complexType>
					<xsd:sequence minOccurs="0" maxOccurs="unbounded">
						<xsd:element name="RESOURCE" type="RESOURCE" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="DETECTPROBLEMS" type="xsd:boolean" />
			<xsd:element name="LOADS" type="LOADLIST" />
			<xsd:element name="LOAD_PLANS" type="LOADPLANLIST"/>
		</xsd:choice>
		<xsd:attributeGroup ref="COMMON_ATTRIBUTES" />
		<xsd:attribute name="DETECTPROBLEMS" type="xsd:boolean" />
	</xsd:complexType>

	<xsd:complexType name="RESOURCELIST">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="RESOURCE" type="RESOURCE" />
			<xsd:element name="RESOURCE_INFINITE" type="RESOURCE_INFINITE" />
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="RESOURCE_INFINITE">
		<xsd:complexContent>
			<xsd:extension base="RESOURCE" />
		</xsd:complexContent>
	</xsd:complexType>

	<!-- BUFFER -->
	<xsd:complexType name="BUFFER">
		<xsd:annotation>
			<xsd:documentation>
        A buffer represents a combination of a item and location. It is the
        entity for keeping modeling inventory. A synonym is SKU or
        stock-keeping-unit.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:group ref="COMMON_FIELDS" />
			<xsd:element name="OWNER" type="BUFFER" />
			<xsd:element name="MEMBERS">
				<xsd:complexType>
					<xsd:sequence minOccurs="0" maxOccurs="unbounded">
						<xsd:element name="BUFFER" type="BUFFER" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="LOCATION" type="LOCATION" />
			<xsd:element name="ITEM" type="ITEM" />
			<xsd:element name="ONHAND" type="xsd:float" />
			<xsd:element name="MINIMUM" type="CALENDAR" />
			<xsd:element name="MAXIMUM" type="CALENDAR" />
			<xsd:element name="PRODUCING" type="OPERATION" />
			<xsd:element name="DETECTPROBLEMS" type="xsd:boolean" />
			<xsd:element name="FLOWS" type="FLOWLIST" />
			<xsd:element name="FLOW_PLANS" type="FLOWPLANLIST"/>
		</xsd:choice>
		<xsd:attributeGroup ref="COMMON_ATTRIBUTES" />
		<xsd:attribute name="ONHAND" type="xsd:float" />
		<xsd:attribute name="DETECTPROBLEMS" type="xsd:boolean" />
	</xsd:complexType>

	<xsd:complexType name="BUFFERLIST">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="BUFFER" type="BUFFER" />
			<xsd:element name="BUFFER_INFINITE" type="BUFFER_INFINITE" />
			<xsd:element name="BUFFER_PROCURE" type="BUFFER_PROCURE" />
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="BUFFER_INFINITE">
		<xsd:complexContent>
			<xsd:extension base="BUFFER" />
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="BUFFER_PROCURE">
		<xsd:complexContent>
			<xsd:extension base="BUFFER">
  			<xsd:choice minOccurs="0" maxOccurs="unbounded">
  				<xsd:element name="SIZE_MAXIMUM" type="positiveFloat" />
  				<xsd:element name="SIZE_MINIMUM" type="positiveFloat" />
  				<xsd:element name="SIZE_MULTIPLE" type="positiveFloat" />
  				<xsd:element name="MININVENTORY" type="positiveFloat" />
  				<xsd:element name="MAXINVENTORY" type="positiveFloat" />
  				<xsd:element name="MININTERVAL" type="xsd:duration" />
  				<xsd:element name="MAXINTERVAL" type="xsd:duration" />
  				<xsd:element name="LEADTIME" type="xsd:duration" />
  				<xsd:element name="FENCE" type="xsd:duration" />
  			</xsd:choice>
  			<xsd:attribute name="SIZE_MAXIMUM" type="positiveFloat" />
  			<xsd:attribute name="SIZE_MINIIMUM" type="positiveFloat" />
  			<xsd:attribute name="SIZE_MULTIPLE" type="positiveFloat" />
  			<xsd:attribute name="MININVENTORY" type="positiveFloat" />
  			<xsd:attribute name="MAXINVENTORY" type="positiveFloat" />
  			<xsd:attribute name="MININTERVAL" type="xsd:duration" />
  			<xsd:attribute name="MAXINTERVAL" type="xsd:duration" />
  			<xsd:attribute name="LEADTIME" type="xsd:duration" />
  			<xsd:attribute name="FENCE" type="xsd:duration" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- FLOW -->
	<xsd:complexType name="FLOW">
		<xsd:annotation>
			<xsd:documentation>
        A flow represent the production or consumption of material from a
        buffer. A flow is attached to an operation.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="OPERATION" type="OPERATION" minOccurs="0" />
			<xsd:element name="BUFFER" type="BUFFER" minOccurs="0" />
			<xsd:element name="QUANTITY" type="xsd:float" minOccurs="0" />
		</xsd:choice>
		<xsd:attribute name="QUANTITY" type="xsd:float" />
		<xsd:attribute name="ACTION" type="action" />
	</xsd:complexType>

	<xsd:complexType name="FLOWLIST">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="FLOW" type="FLOW" />
			<xsd:element name="FLOW_END" type="FLOW_END" />
			<xsd:element name="FLOW_START" type="FLOW_START" />
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="FLOW_END">
		<xsd:complexContent>
			<xsd:extension base="FLOW" />
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="FLOW_START">
		<xsd:complexContent>
			<xsd:extension base="FLOW" />
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="FLOW_PLAN">
		<xsd:sequence>
			<xsd:element name="DATE" type="xsd:dateTime" />
			<xsd:element name="QUANTITY" type="xsd:float" />
			<xsd:element name="ONHAND" type="xsd:float" />
			<xsd:element name="MINIMUM" type="xsd:float" />
			<xsd:element name="MAXIMUM" type="xsd:float" />
			<xsd:element name="OPERATION_PLAN" type="OPERATION_PLAN" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="FLOWPLANLIST">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="FLOW_PLAN" type="FLOW_PLAN" />
		</xsd:choice>
	</xsd:complexType>

	<!-- LOAD -->
	<xsd:complexType name="LOAD">
		<xsd:annotation>
			<xsd:documentation>
        A load links a resource to a certain operation.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element name="OPERATION" type="OPERATION" minOccurs="0" />
			<xsd:element name="RESOURCE" type="RESOURCE" minOccurs="0" />
			<xsd:element name="USAGE" type="xsd:float" minOccurs="0" />
		</xsd:all>
		<xsd:attribute name="USAGE" type="xsd:float" />
		<xsd:attribute name="ACTION" type="action" />
	</xsd:complexType>

	<xsd:complexType name="LOADLIST">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="LOAD" type="LOAD" />
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="LOAD_PLAN">
		<xsd:sequence>
			<xsd:element name="DATE" type="xsd:dateTime" />
			<xsd:element name="QUANTITY" type="xsd:float" />
			<xsd:element name="ONHAND" type="xsd:float" />
			<xsd:element name="MINIMUM" type="xsd:float" />
			<xsd:element name="MAXIMUM" type="xsd:float" />
			<xsd:element name="OPERATION_PLAN" type="OPERATION_PLAN" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="LOADPLANLIST">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="LOAD_PLAN" type="LOAD_PLAN" />
		</xsd:choice>
	</xsd:complexType>

	<!-- DEMAND -->
	<xsd:complexType name="DEMAND">
		<xsd:annotation>
			<xsd:documentation>
        A demand represents a independent demand to be planned. It can
        represent a customer order or a forecast.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:group ref="COMMON_FIELDS" />
			<xsd:element name="QUANTITY" type="positiveFloat" />
			<xsd:element name="ITEM" type="ITEM" />
			<xsd:element name="DUE" type="xsd:dateTime" />
			<xsd:element name="PRIORITY" type="xsd:integer" />
			<xsd:element name="OPERATION" type="OPERATION" />
			<xsd:element name="CUSTOMER" type="CUSTOMER" />
			<xsd:element name="MINSHIPMENT" type="positiveFloat" />
			<xsd:element name="MAXLATENESS" type="xsd:duration" />
			<xsd:element name="DETECTPROBLEMS" type="xsd:boolean" />
			<xsd:element name="OWNER" type="DEMAND" />
			<xsd:element name="MEMBERS">
				<xsd:complexType>
					<xsd:sequence minOccurs="0" maxOccurs="unbounded">
						<xsd:element name="DEMAND" type="DEMAND" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="OPERATION_PLANS" type="OPERATIONPLANLIST" />
		</xsd:choice>
		<xsd:attributeGroup ref="COMMON_ATTRIBUTES" />
		<xsd:attribute name="QUANTITY" type="positiveFloat" />
		<xsd:attribute name="DUE" type="xsd:dateTime" />
		<xsd:attribute name="PRIORITY" type="xsd:integer" />
		<xsd:attribute name="DETECTPROBLEMS" type="xsd:boolean" />
		<xsd:attribute name="MAXLATENESS" type="xsd:duration" />
		<xsd:attribute name="MINSHIPMENT" type="positiveFloat" />
	</xsd:complexType>

	<xsd:complexType name="DEMANDLIST">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="DEMAND" type="DEMAND" />
		</xsd:choice>
	</xsd:complexType>

	<!-- CALENDAR -->
	<xsd:complexType name="CALENDAR">
		<xsd:annotation>
			<xsd:documentation>
        A calendar is used to represent time dependent parameters.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="NAME" type="non-empty-string" use="required" />
		<xsd:attribute name="ACTION" type="action" />
	</xsd:complexType>

	<xsd:complexType name="CALENDARLIST">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="CALENDAR" type="CALENDAR" />
			<xsd:element name="CALENDAR_FLOAT" type="CALENDAR_FLOAT" />
			<xsd:element name="CALENDAR_VOID" type="CALENDAR_VOID" />
			<xsd:element name="CALENDAR_INTEGER" type="CALENDAR_INTEGER" />
			<xsd:element name="CALENDAR_BOOLEAN" type="CALENDAR_BOOLEAN" />
			<xsd:element name="CALENDAR_STRING" type="CALENDAR_STRING" />
			<xsd:element name="CALENDAR_OPERATION" type="CALENDAR_OPERATION" />
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="CALENDAR_FLOAT">
		<xsd:complexContent>
			<xsd:extension base="CALENDAR">
				<xsd:sequence>
					<xsd:element name="BUCKETS" minOccurs="0">
						<xsd:complexType>
							<xsd:choice minOccurs="0" maxOccurs="unbounded">
								<xsd:element name="BUCKET" minOccurs="0">
									<xsd:complexType>
										<xsd:all>
											<xsd:element name="NAME" type="xsd:normalizedString" minOccurs="0" />
											<xsd:element name="END" type="xsd:dateTime" minOccurs="0" />
											<xsd:element name="VALUE" type="xsd:float" minOccurs="0" />
										</xsd:all>
										<xsd:attribute name="START" type="xsd:dateTime" use="required" />
										<xsd:attribute name="NAME" type="xsd:normalizedString" />
										<xsd:attribute name="END" type="xsd:dateTime" />
										<xsd:attribute name="VALUE" type="xsd:float" />
										<xsd:attribute name="ACTION" type="action" />
									</xsd:complexType>
								</xsd:element>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="CALENDAR_VOID">
		<xsd:complexContent>
			<xsd:extension base="CALENDAR">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="BUCKETS">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="BUCKET" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:all>
											<xsd:element name="NAME" type="xsd:normalizedString" minOccurs="0" />
											<xsd:element name="END" type="xsd:dateTime" minOccurs="0" />
										</xsd:all>
										<xsd:attribute name="START" type="xsd:dateTime" use="required" />
										<xsd:attribute name="NAME" type="xsd:normalizedString" />
										<xsd:attribute name="END" type="xsd:dateTime" />
										<xsd:attribute name="ACTION" type="action" />
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="CALENDAR_INTEGER">
		<xsd:complexContent>
			<xsd:extension base="CALENDAR">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="BUCKETS">
						<xsd:complexType>
							<xsd:choice minOccurs="0" maxOccurs="unbounded">
								<xsd:element name="BUCKET">
									<xsd:complexType>
										<xsd:all>
											<xsd:element name="NAME" type="xsd:normalizedString" minOccurs="0" />
											<xsd:element name="END" type="xsd:dateTime" minOccurs="0" />
											<xsd:element name="VALUE" type="xsd:integer" minOccurs="0" />
										</xsd:all>
										<xsd:attribute name="VALUE" type="xsd:integer" />
										<xsd:attribute name="START" type="xsd:dateTime" use="required" />
										<xsd:attribute name="NAME" type="xsd:normalizedString" />
										<xsd:attribute name="END" type="xsd:dateTime" />
										<xsd:attribute name="ACTION" type="action" />
									</xsd:complexType>
								</xsd:element>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="CALENDAR_BOOLEAN">
		<xsd:complexContent>
			<xsd:extension base="CALENDAR">
				<xsd:sequence>
					<xsd:element name="BUCKETS" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="BUCKET" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:all>
											<xsd:element name="NAME" type="xsd:normalizedString" minOccurs="0" />
											<xsd:element name="END" type="xsd:dateTime" minOccurs="0" />
											<xsd:element name="VALUE" type="xsd:boolean" minOccurs="0" />
										</xsd:all>
										<xsd:attribute name="VALUE" type="xsd:boolean" />
										<xsd:attribute name="START" type="xsd:dateTime" use="required" />
										<xsd:attribute name="NAME" type="xsd:normalizedString" />
										<xsd:attribute name="END" type="xsd:dateTime" />
										<xsd:attribute name="ACTION" type="action" />
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="CALENDAR_STRING">
		<xsd:complexContent>
			<xsd:extension base="CALENDAR">
				<xsd:sequence>
					<xsd:element name="BUCKETS" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="BUCKET" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:all>
											<xsd:element name="NAME" type="xsd:normalizedString" minOccurs="0" />
											<xsd:element name="END" type="xsd:dateTime" minOccurs="0" />
											<xsd:element name="VALUE" type="xsd:string" minOccurs="0" />
										</xsd:all>
										<xsd:attribute name="VALUE" type="xsd:normalizedString" />
										<xsd:attribute name="START" type="xsd:dateTime" use="required" />
										<xsd:attribute name="NAME" type="xsd:normalizedString" />
										<xsd:attribute name="END" type="xsd:dateTime" />
										<xsd:attribute name="ACTION" type="action" />
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="CALENDAR_OPERATION">
		<xsd:complexContent>
			<xsd:extension base="CALENDAR">
				<xsd:sequence>
					<xsd:element name="BUCKETS" minOccurs="0">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="BUCKET" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:all>
											<xsd:element name="NAME" type="xsd:normalizedString" minOccurs="0" />
											<xsd:element name="END" type="xsd:dateTime" minOccurs="0" />
											<xsd:element name="VALUE" type="OPERATION" minOccurs="0" />
										</xsd:all>
										<xsd:attribute name="START" type="xsd:dateTime" use="required" />
										<xsd:attribute name="NAME" type="xsd:normalizedString" />
										<xsd:attribute name="END" type="xsd:dateTime" />
										<xsd:attribute name="ACTION" type="action" />
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- OPERATION_PLAN -->
	<xsd:complexType name="OPERATION_PLAN">
		<xsd:annotation>
			<xsd:documentation>
        This entity represent the key for representing the plan. It models an
        operation planned at a certain quantity and time.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="DEMAND" type="DEMAND" minOccurs="0" />
			<xsd:element name="START" type="xsd:dateTime" minOccurs="0" />
			<xsd:element name="END" type="xsd:dateTime" minOccurs="0" />
			<xsd:element name="EPST" type="xsd:dateTime" minOccurs="0" />
			<xsd:element name="LPST" type="xsd:dateTime" minOccurs="0" />
			<xsd:element name="QUANTITY" type="positiveFloat" minOccurs="0" />
			<xsd:element name="LOCKED" type="xsd:boolean" minOccurs="0" />
			<xsd:element name="OWNER" type="OPERATION_PLAN" minOccurs="0" />
		</xsd:sequence>
		<xsd:attribute name="ID" type="xsd:unsignedLong" />
		<xsd:attribute name="OPERATION" type="non-empty-string" />
		<xsd:attribute name="START" type="xsd:dateTime" />
		<xsd:attribute name="END" type="xsd:dateTime" />
		<xsd:attribute name="EPST" type="xsd:dateTime" />
		<xsd:attribute name="LPST" type="xsd:dateTime" />
		<xsd:attribute name="QUANTITY" type="positiveFloat" />
		<xsd:attribute name="LOCKED" type="xsd:boolean" />
		<xsd:attribute name="ACTION" type="action" />
	</xsd:complexType>

	<xsd:complexType name="OPERATIONPLANLIST">
		<xsd:sequence minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="OPERATION_PLAN" type="OPERATION_PLAN" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- PROBLEM -->
	<xsd:complexType name="PROBLEM">
		<xsd:annotation>
			<xsd:documentation>
        This entity is used to represent inconsistencies, alerts and warnings
        in the model. Problems are maintained internally by the system. They
        are thus export-only, meaning that we can't directly import or build
        problems.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="NAME" type="xsd:normalizedString" minOccurs="0" />
			<xsd:element name="DESCRIPTION" type="xsd:normalizedString" minOccurs="0" />
			<xsd:element name="DATES" type="xsd:normalizedString" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="PROBLEMLIST">
		<xsd:sequence minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="PROBLEM" type="PROBLEM" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- COMMAND -->
	<!-- All command fields support environment variable substitution -->
	<xsd:complexType name="COMMAND" abstract="true">
		<xsd:annotation>
			<xsd:documentation>
        System state changes are all directed by commands.
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="VERBOSE" type="xsd:boolean" />
	</xsd:complexType>

	<xsd:complexType name="COMMAND_SOLVE">
		<xsd:complexContent>
			<xsd:extension base="COMMAND">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="VERBOSE" type="xsd:boolean" />
					<xsd:element name="SOLVER" type="SOLVER" />
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="COMMAND_SYSTEM">
		<xsd:complexContent>
			<xsd:extension base="COMMAND">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="VERBOSE" type="xsd:boolean" />
					<xsd:element name="CMDLINE" type="xsd:string" />
				</xsd:choice>
				<xsd:attribute name="CMDLINE" type="xsd:string" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="COMMAND_IF">
		<xsd:complexContent>
			<xsd:extension base="COMMAND">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="VERBOSE" type="xsd:boolean" />
					<xsd:element name="CONDITION" type="xsd:string" />
					<xsd:element name="THEN" type="COMMAND" />
					<xsd:element name="ELSE" type="COMMAND" />
				</xsd:choice>
				<xsd:attribute name="CONDITION" type="xsd:string" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="COMMAND_SETENV">
		<xsd:complexContent>
			<xsd:extension base="COMMAND">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="VERBOSE" type="xsd:boolean" />
					<xsd:element name="VARIABLE" type="xsd:string" />
					<xsd:element name="VALUE" type="xsd:string" />
				</xsd:choice>
				<xsd:attribute name="VARIABLE" type="xsd:string" />
				<xsd:attribute name="VALUE" type="xsd:string" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="PARAMETER">
		<xsd:all>
			<xsd:element name="NAME" type="xsd:normalizedString" minOccurs="0" />
			<xsd:element name="VALUE" type="xsd:string" minOccurs="0" />
		</xsd:all>
		<xsd:attribute name="NAME" type="xsd:normalizedString" />
		<xsd:attribute name="VALUE" type="xsd:string" />
	</xsd:complexType>

	<xsd:complexType name="COMMAND_LOADLIB">
		<xsd:complexContent>
			<xsd:extension base="COMMAND">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="VERBOSE" type="xsd:boolean" />
					<xsd:element name="FILENAME" type="xsd:normalizedString" />
					<xsd:element name="PARAMETER" type="PARAMETER" />
				</xsd:choice>
				<xsd:attribute name="FILENAME" type="xsd:normalizedString" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="COMMAND_LIST">
		<xsd:complexContent>
			<xsd:extension base="COMMAND">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="VERBOSE" type="xsd:boolean" />
					<xsd:element name="COMMAND" type="COMMAND" />
					<xsd:element name="ABORTONERROR" type="xsd:boolean" />
					<xsd:element name="MAXPARALLEL" type="xsd:positiveInteger" />
				</xsd:choice>
				<xsd:attribute name="ABORTONERROR" type="xsd:boolean" />
				<xsd:attribute name="MAXPARALLEL" type="xsd:positiveInteger" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="COMMAND_SIZE">
		<xsd:complexContent>
			<xsd:extension base="COMMAND">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="VERBOSE" type="xsd:boolean" />
				</xsd:choice>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="COMMAND_ERASE">
		<xsd:complexContent>
			<xsd:extension base="COMMAND">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="VERBOSE" type="xsd:boolean" />
					<xsd:element name="MODE">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="model" />
								<xsd:enumeration value="plan" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:choice>
				<xsd:attribute name="MODE">
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:enumeration value="model" />
							<xsd:enumeration value="plan" />
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="COMMAND_SAVE">
		<xsd:complexContent>
			<xsd:extension base="COMMAND">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="VERBOSE" type="xsd:boolean" />
					<xsd:element name="FILENAME" type="xsd:normalizedString" />
					<xsd:element name="HEADERSTART" type="xsd:string" />
					<xsd:element name="HEADERATTS" type="xsd:string" />
					<xsd:element name="CONTENT">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="STANDARD" />
								<xsd:enumeration value="PLAN" />
								<xsd:enumeration value="PLANDETAIL" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:choice>
				<xsd:attribute name="FILENAME" type="xsd:normalizedString" />
				<xsd:attribute name="HEADERSTART" type="xsd:string" />
				<xsd:attribute name="HEADERATTS" type="xsd:string" />
				<xsd:attribute name="CONTENT">
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:enumeration value="STANDARD" />
							<xsd:enumeration value="PLAN" />
							<xsd:enumeration value="PLANDETAIL" />
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="COMMAND_SAVEPLAN">
		<xsd:complexContent>
			<xsd:extension base="COMMAND">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="VERBOSE" type="xsd:boolean" />
					<xsd:element name="FILENAME" type="xsd:normalizedString" />
				</xsd:choice>
				<xsd:attribute name="FILENAME" type="xsd:normalizedString" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="COMMAND_READXML">
		<xsd:complexContent>
			<xsd:extension base="COMMAND">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="VERBOSE" type="xsd:boolean" />
					<xsd:element name="FILENAME" type="xsd:normalizedString" />
					<xsd:element name="VALIDATE" type="xsd:boolean" />
				</xsd:choice>
				<xsd:attribute name="FILENAME" type="xsd:normalizedString" />
				<xsd:attribute name="VALIDATE" type="xsd:boolean" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="COMMAND_READXMLSTRING">
		<xsd:complexContent>
			<xsd:extension base="COMMAND">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="VERBOSE" type="xsd:boolean" />
					<xsd:element name="DATA" type="xsd:string" />
					<xsd:element name="VALIDATE" type="xsd:boolean" />
				</xsd:choice>
				<xsd:attribute name="DATA" type="xsd:string" />
				<xsd:attribute name="VALIDATE" type="xsd:boolean" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="COMMAND_READXMLURL">
		<xsd:complexContent>
			<xsd:extension base="COMMAND">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="VERBOSE" type="xsd:boolean" />
					<xsd:element name="URL" type="xsd:normalizedString" />
					<xsd:element name="VALIDATE" type="xsd:boolean" />
				</xsd:choice>
				<xsd:attribute name="URL" type="xsd:normalizedString" />
				<xsd:attribute name="VALIDATE" type="xsd:boolean" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- SOLVER -->
  <xsd:simpleType name="loglevel" id="loglevel">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="65535"/>
    </xsd:restriction>
  </xsd:simpleType>
	<xsd:complexType name="SOLVER">
		<xsd:annotation>
			<xsd:documentation>
        A solver represents modules of functionality that manipulate the model.
        Examples are solvers to generate a plan, solvers to compute safety
        stocks, solvers to create production or purchase orders, etc...
      </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="NAME" type="non-empty-string" use="required" />
		<xsd:attribute name="ACTION" type="action" />
		<xsd:attribute name="LOGLEVEL" type="loglevel" />
	</xsd:complexType>

	<xsd:complexType name="SOLVERLIST">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="SOLVER" type="SOLVER" />
			<xsd:element name="SOLVER_MRP" type="SOLVER_MRP" />
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="SOLVER_MRP">
		<xsd:complexContent>
			<xsd:extension base="SOLVER">
				<xsd:choice minOccurs="0" maxOccurs="unbounded">
					<xsd:element name="CONSTRAINTS" type="xsd:unsignedShort" />
					<xsd:element name="MAXPARALLEL" type="xsd:positiveInteger" />
					<xsd:element name="LOGLEVEL" type="loglevel" />
				</xsd:choice>
				<xsd:attribute name="CONSTRAINTS" type="xsd:unsignedShort" />
				<xsd:attribute name="MAXPARALLEL" type="xsd:positiveInteger" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

</xsd:schema>
