<?xml version="1.0" encoding="UTF-8" ?>
<plan xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<?python
import os
from datetime import datetime

from freppledb.execute.export_database import exportfrepple as export_to_database
from freppledb.execute.export_file import exportfrepple as export_to_file
from freppledb.execute.load import loadfrepple
from django.conf import settings

# Send the output to a logfile
frepple.settings.logfile = os.path.join(os.environ['FREPPLE_HOME'],'frepple.log')

# Create a solver where the plan type are defined by an environment variable
try: plantype = int(os.environ['PLAN_TYPE'])
except: plantype = 7  # Default is a fully constrained plan
frepple.solver_mrp(name="MRP", constraints=plantype)
print "Plan type: ", plantype

# Pick up an override for the database to use
if 'FREPPLE_DATABASE_NAME' in os.environ:
  settings.DATABASE_NAME = os.environ['FREPPLE_DATABASE_NAME']
if 'FREPPLE_DATABASE_USER' in os.environ:
  settings.DATABASE_USER = os.environ['FREPPLE_DATABASE_USER']

# Welcome message
if settings.DATABASE_ENGINE == 'sqlite3':
  print "Using sqlite3 database '%s'" % settings.DATABASE_NAME
else:
  print "Using %s database '%s' as '%s' on '%s:%s'" % (settings.DATABASE_ENGINE, \
    settings.DATABASE_NAME, settings.DATABASE_USER, settings.DATABASE_HOST, \
    settings.DATABASE_PORT)

print "\nStart loading data from the database at", datetime.now().strftime("%H:%M:%S")
frepple.printsize()
loadfrepple()
frepple.printsize()

print "\nStart plan generation at", datetime.now().strftime("%H:%M:%S")
frepple.solver_forecast(name="Netting orders from forecast",loglevel=0).solve()
frepple.solver_mrp(name="MRP",loglevel=0).solve()
frepple.printsize()

print "\nStart exporting plan to the database at", datetime.now().strftime("%H:%M:%S")
export_to_database()

#print "\nStart saving the plan to flat files at", datetime.now().strftime("%H:%M:%S")
#export_to_file()

#print "\nStart saving the plan to an XML file at", datetime.now().strftime("%H:%M:%S")
#frepple.saveXMLfile("output.1.xml","PLANDETAIL")
#frepple.saveXMLfile("output.1.xml","PLAN")
#frepple.saveXMLfile("output.1.xml","STANDARD")

#print "Start deleting model data at", datetime.now().strftime("%H:%M:%S")
#frepple.erase(True)
#frepple.printsize()

print "\nFinished planning at", datetime.now().strftime("%H:%M:%S")
?>

</plan>
