<?xml version="1.0" encoding="UTF-8" ?>
<plan xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <description>
  This test shows how we can access frePPLe objects from Python.
  </description>
  <current>2009-01-01T00:00:00</current>
<?python

def printmodel():
  '''This function prints out information about the model to the output file'''

  # Open the file
  out = open("output.1.xml", "wt", 1)

  # Print information
  try:

    print "start exporting the problems"
    print >>out, "Problems:"
    for i in frepple.problems():
      print >>out, i.entity, i.name, i.start, i.end, i.description, i.weight

    print "start exporting the operation plans"
    print >>out, "\nOperationplans:"
    for i in frepple.operationplans():
      print >>out, i.id, i.operation.name, i.quantity, \
        i.start, i.end, i.demand and i.demand.name or None

    print "start exporting the buffer plans"
    print >>out, "\nBuffers:"
    for i in frepple.buffers():
      print >>out, i.name, i.category, i.subcategory, \
        i.description, i.onhand, i.location and i.location.name or None, \
        i.item and i.item.name or None, \
        i.maximum and i.maximum.name or None, \
        i.minimum and i.minimum.name or None, \
        i.producing and i.producing.name or None
      for j in i.flowplans:
        print >>out, "     ", j.operationplan.id, \
          j.quantity, j.date, j.onhand

    print "start exporting the resource plans"
    print >>out, "\nResources:"
    for i in frepple.resources():
      print >>out, i.name, i.category, i.subcategory, i.description, \
        i.location and i.location.name or None, \
        i.maximum and i.maximum.name or None, \
        i.owner and i.owner.name or None
      for j in i.loadplans:
        print >>out, "     ", j.operationplan.id, \
          j.quantity, j.startdate, j.enddate

    print "start exporting the demand plans"
    print >>out, "\nDemands:"
    for i in frepple.demands():
      print >>out, i.name, i.quantity, i.due, i.priority, \
        i.item.name, i.operation or None, \
        i.owner and i.owner.name or None, \
        i.customer and i.customer.name or None

    print "Done"

  # Close the file
  finally:
    out.close()

# Read a file, run the solver and export the results
frepple.readXMLfile('data.xml')
frepple.solver_mrp(name="MRP",constraints=7).solve()
printmodel()
frepple.printsize()
frepple.saveXMLfile('output.2.xml')

?>
</plan>
