<?xml version="1.0" encoding="UTF-8" ?>
<plan xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <name>Forecast test model</name>
  <description>
  This test demonstrates the capability to analyze a time series of
  historical demand, and use it to create future forecasted demand quantities.

  In this test case, we don't use any profiling or netting but these
  obviously can all be combined:
    - Create future, gross forecast quantities based on a time series.
    - Profile the forecast over more granular time buckets.
    - Net actual orders from the gross forecast to obtain a net
      forecast to be planned.
  </description>
  <current>2007-01-01T00:00:00</current>
  <commands>
    <verbose>true</verbose>
    <command xsi:type="command_python" cmdline="generateForecast()" />
    <command xsi:type="command_save">
      <filename>output.1.xml</filename>
    </command>
  </commands>

  <!--
  This calendar defines the forecasting buckets.
  -->
  <calendars>
    <calendar name="planningbuckets" xsi:type="calendar_double">
      <buckets>
        <bucket start="2007-01-01T00:00:00" value="1"/>
        <bucket start="2007-02-01T00:00:00" value="1"/>
        <bucket start="2007-03-01T00:00:00" value="1"/>
        <bucket start="2007-04-01T00:00:00" value="1"/>
        <bucket start="2007-05-01T00:00:00" value="1"/>
        <bucket start="2007-06-01T00:00:00" value="1"/>
      </buckets>
    </calendar>
  </calendars>
  <demands>
    <demand name="test" xsi:type="demand_forecast" discrete="false">
      <calendar name="planningbuckets" />
    </demand>
  </demands>

<?python

import frepple

def generateForecast():
  theitem = frepple.item(name="item")
  thecustomer = frepple.customer(name="customer")
  thecalendar = frepple.calendar(name="planningbuckets")
  thebuckets = [ i.start for i in thecalendar.buckets ]

  # A simple constant forecast
  fcst = frepple.demand_forecast(name="flat demand", item=theitem, customer=thecustomer, calendar=thecalendar)
  fcst.timeseries([100,100,100,100,100,100,100,100,100,100,100,100,100], thebuckets)

  # A simple trended forecast
  fcst = frepple.demand_forecast(name="trended demand", item=theitem, customer=thecustomer, calendar=thecalendar)
  fcst.timeseries([10,20,30,40,50,60,70,80,90,100,110,120,130,140,150], thebuckets)

  # A seasonal demand
  fcst = frepple.demand_forecast(name="seasonal demand", item=theitem, customer=thecustomer, calendar=thecalendar)
  fcst.timeseries([10,10,20,30,20,10,10,10,10,20,30,20,10,10,10,10,20,30,20,10,10], thebuckets)

  # Very little history
  fcst = frepple.demand_forecast(name="little history", item=theitem, customer=thecustomer, calendar=thecalendar)
  fcst.timeseries([10,20], thebuckets)

?>
</plan>
